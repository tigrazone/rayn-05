////////////////////////////////////////////////////////////////////////////
//
// nrBound.h
//
// A class for a bounding volume.
//
// Nate Robins, January 2002.
//
////////////////////////////////////////////////////////////////////////////

#ifndef NRBOUND_H
#define NRBOUND_H


////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////

#include "nrArray.h"
#include "nrVector3.h"


////////////////////////////////////////////////////////////////////////////
// Classes
////////////////////////////////////////////////////////////////////////////

class nrInterval;
class nrRay;

////////////////////////////////////////////////////////////////////////////

class nrBound
{
public:
    
    nrBound( const nrVector3& minimums = nrVector3( 0, 0, 0 ), const nrVector3& maximums = nrVector3( 0, 0, 0 ) );
    virtual ~nrBound( void );
    
    // Validate a bound.
    //
    // If any dimension of the bounding is ~0, expand that dimension to
    // a reasonable amount (epsilon).
    virtual void Validate( void );
    
    // Return true if the ray hit the bounding volume, false otherwise.
    virtual bool Hit( const nrRay& ray, const nrInterval& interval ) const;
    
public:
    
    nrVector3 m_Minimums;
    nrVector3 m_Maximums;
};

////////////////////////////////////////////////////////////////////////////

#endif  // NRBOUND_H
