////////////////////////////////////////////////////////////////////////////
//
// nrPencil.h
//
// A class for writing (a pencil).
//
// Nate Robins, March 2001.
//
////////////////////////////////////////////////////////////////////////////

#ifndef NRPENCIL_H
#define NRPENCIL_H


////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////

#include <stdarg.h>


////////////////////////////////////////////////////////////////////////////
// Globals
////////////////////////////////////////////////////////////////////////////

class nrPencil;
extern nrPencil g_Pencil;


////////////////////////////////////////////////////////////////////////////
// Classes
////////////////////////////////////////////////////////////////////////////

class nrPencil
{
public:
    
    nrPencil( void );
    ~nrPencil( void );
    
    // Return string containing formatted text.
    const char* Write( const char* format, ... );
    
    // Return string containing composed (formatted) text.
    const char* Compose( const char* format, va_list args );
    
    // Return last string formatted.
    const char* Written( void );
    
private:
    
    // Sharpen the pencil (grow the "static" buffer to twice its current 
    // size).
    void Sharpen( void );
    
protected:
    
    char* m_Buffer;         // "Static" buffer for formatting writes.
    int m_BufferSize;       // Size (in bytes) of m_Buffer.
};


////////////////////////////////////////////////////////////////////////////

#endif  // NRPENCIL_H
